{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Header/styled.js","Header/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Main/styled.js","Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["FormContainer","styled","form","_templateObject","_taggedTemplateLiteral","FormInput","input","_templateObject2","FormButton","button","_templateObject3","Form","_ref","addNewTask","_useState","useState","_useState2","_slicedToArray","newTaskContent","setNewTaskContent","React","createElement","onSubmit","event","preventDefault","contentTrimmed","trim","value","required","placeholder","onChange","_ref2","target","List","ul","Item","li","hidden","css","Content","span","_templateObject4","done","_templateObject5","Button","_templateObject6","_ref3","toggleDone","_templateObject7","_ref4","remove","_templateObject8","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","key","id","onClick","content","MainHeader","header","HeaderTitle","h1","Header","title","ButtonsContainer","div","Key","disabled","Buttons","toggleHideDone","setAllDone","length","Fragment","every","SectionContainer","section","SectionBox","SectionHeader","h2","Section","body","extraHeaderContent","MainContainer","main","Main","children","getTasksFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","_useState3","_useState4","setTasks","useEffect","setItem","stringify","concat","_toConsumableArray","_objectSpread","filter","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.838cb8c0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n  padding: 20px;\r\n\r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  border: none;\r\n  background-color: teal;\r\n  color: white;\r\n  padding: 10px 20px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: hsl(180, 100%, 30%);\r\n    transform: scale(1.1);\r\n    transition: all 0.2s;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { FormContainer, FormInput, FormButton } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contentTrimmed = newTaskContent.trim();\r\n    if (contentTrimmed.trim() === \"\") {\r\n      return;\r\n    }\r\n    addNewTask(contentTrimmed);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer onSubmit={onFormSubmit}>\r\n      <FormInput\r\n        value={newTaskContent}\r\n        required\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <FormButton>Dodaj zadanie</FormButton>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  padding: 30px 10px;\r\n  margin: 0px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  grid-gap: 10px;\r\n  padding: 15px;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n\r\n  ${({ hidden }) =>\r\n    hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 35px;\r\n  height: 35px;\r\n  color: white;\r\n  border: none;\r\n\r\n  ${({ toggleDone }) =>\r\n    toggleDone &&\r\n    css`\r\n      background-color: green;\r\n\r\n      &:hover {\r\n        background-color: hsl(120, 100%, 30%);\r\n        transition: 0.2s;\r\n        cursor: pointer;\r\n      }\r\n    `}\r\n\r\n  ${({ remove }) =>\r\n    remove &&\r\n    css`\r\n      background-color: red;\r\n\r\n      &:hover {\r\n        background-color: hsl(0, 100%, 65%);\r\n        transition: 0.2s;\r\n        cursor: pointer;\r\n      }\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map((task) => (\r\n      <Item key={task.id} hidden={task.done && hideDone}>\r\n        <Button\r\n          toggleDone\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </Button>\r\n        <Content done={task.done}>\r\n          {task.id}. {task.content}\r\n        </Content>\r\n        <Button\r\n          remove\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          ðŸ—‘\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainHeader = styled.header`\r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n  justify-content: flex-start;\r\n`;\r\n","import React from \"react\";\r\nimport { HeaderTitle, MainHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <MainHeader>\r\n    <HeaderTitle>{title}</HeaderTitle>\r\n  </MainHeader>\r\n);\r\n\r\nexport default Header;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n\r\n  @media (max-width: 600px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const Key = styled.button`\r\n  border: none;\r\n  background-color: white;\r\n  color: teal;\r\n  cursor: pointer;\r\n\r\n  ${({ disabled }) =>\r\n    disabled &&\r\n    css`\r\n      color: #ccc;\r\n      transition: 0.2s;\r\n      cursor: auto;\r\n    `}\r\n\r\n  &:hover {\r\n    color: hsl(180, 100%, 35%);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ButtonsContainer, Key } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <ButtonsContainer>\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <Key onClick={toggleHideDone}>\r\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n        </Key>\r\n        <Key disabled={tasks.every(({ done }) => done)} onClick={setAllDone}>\r\n          UkoÅ„cz wszystkie\r\n        </Key>\r\n      </>\r\n    )}\r\n  </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n  background-color: white;\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const SectionBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 20px;\r\n  margin: 0;\r\n\r\n  @media (max-width: 600px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    row-gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const SectionHeader = styled.h2``;\r\n","import React from \"react\";\r\nimport { SectionContainer, SectionBox, SectionHeader } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <SectionContainer>\r\n    <SectionBox>\r\n      <SectionHeader>{title}</SectionHeader>\r\n      {extraHeaderContent}\r\n    </SectionBox>\r\n    {body}\r\n  </SectionContainer>\r\n);\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  margin: 50px auto;\r\n  max-width: 1000px;\r\n  word-break: break-word;\r\n\r\n  @media (max-width: 600px) {\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { MainContainer } from \"./styled\";\r\n\r\nconst Main = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Header from \"./Header\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Main from \"./Main\";\n\nconst getTasksFromLocalStorage = () => {\n  const tasks = localStorage.getItem(\"tasks\");\n  return tasks ? JSON.parse(tasks) : [];\n};\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(getTasksFromLocalStorage);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone((hideDone) => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks((tasks) =>\n      tasks.map((task) => {\n        if (task.id === id) {\n          return { ...task, done: !task.done };\n        }\n\n        return task;\n      })\n    );\n  };\n\n  const setAllDone = () => {\n    setTasks((tasks) => tasks.map((task) => ({ ...task, done: true })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ]);\n  };\n\n  return (\n    <Main>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks\n            toggleTaskDone={toggleTaskDone}\n            removeTask={removeTask}\n            tasks={tasks}\n            hideDone={hideDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}