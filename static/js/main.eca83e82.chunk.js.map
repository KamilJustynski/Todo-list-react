{"version":3,"sources":["useTasks.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Header/styled.js","Header/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Main/styled.js","Main/index.js","App.js","reportWebVitals.js","globalStyle.js","index.js","theme.js"],"names":["useTasks","_useState","useState","tasks","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","setTasks","useEffect","setItem","stringify","_useState3","_useState4","hideDone","setHideDone","removeTask","id","filter","task","toggleTaskDone","map","_objectSpread","done","setAllDone","addNewTask","content","concat","_toConsumableArray","length","toggleHideDone","FormContainer","styled","form","_templateObject","_taggedTemplateLiteral","_ref","theme","breakpoint","mobileMax","FormInput","input","_templateObject2","_ref2","color","mediumGray","FormButton","button","_templateObject3","_ref3","teal","_ref4","white","_ref5","mediumTeal","Form","newTaskContent","setNewTaskContent","inputRef","useRef","React","createElement","onSubmit","event","preventDefault","contentTrimmed","trim","ref","value","required","placeholder","onChange","target","onClick","current","focus","List","ul","Item","li","hidden","css","Content","span","_templateObject4","_templateObject5","Button","_templateObject6","toggleDone","_templateObject7","_ref6","green","_ref7","mediumGreen","_ref8","remove","_templateObject8","_ref9","red","_ref10","mediumRed","Tasks","key","MainHeader","header","HeaderTitle","h1","Header","title","ButtonsContainer","div","disabled","gray","lightTeal","Buttons","Fragment","every","SectionContainer","section","SectionBox","SectionHeader","h2","Section","body","extraHeaderContent","MainContainer","main","Main","children","App","_useTasks","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","createRoot","document","getElementById","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.eca83e82.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n  const getTasksFromLocalStorage = () => {\r\n    const tasks = localStorage.getItem(\"tasks\");\r\n    return tasks ? JSON.parse(tasks) : [];\r\n  };\r\n\r\n  const [tasks, setTasks] = useState(getTasksFromLocalStorage);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const removeTask = (id) => {\r\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return { ...task, done: !task.done };\r\n        }\r\n\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks((tasks) => tasks.map((task) => ({ ...task, done: true })));\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks((tasks) => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone((hideDone) => !hideDone);\r\n  };\r\n\r\n  return {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask,\r\n    toggleHideDone,\r\n    hideDone,\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n  padding: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid ${({ theme }) => theme.color.mediumGray};\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.color.teal};\r\n  color: ${({ theme }) => theme.color.white};\r\n  padding: 10px 20px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.color.mediumTeal};\r\n    transform: scale(1.1);\r\n    transition: all 0.2s;\r\n  }\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { FormContainer, FormInput, FormButton } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contentTrimmed = newTaskContent.trim();\r\n    if (contentTrimmed.trim() === \"\") {\r\n      return;\r\n    }\r\n    addNewTask(contentTrimmed);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <FormContainer onSubmit={onFormSubmit}>\r\n      <FormInput\r\n        ref={inputRef}\r\n        value={newTaskContent}\r\n        required\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <FormButton onClick={focusInput}>Dodaj zadanie</FormButton>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  padding: 30px 10px;\r\n  margin: 0px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  grid-gap: 10px;\r\n  padding: 15px;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${({ theme }) => theme.color.mediumGray};\r\n\r\n  ${({ hidden }) =>\r\n    hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 35px;\r\n  height: 35px;\r\n  color: ${({ theme }) => theme.color.white};\r\n  border: none;\r\n\r\n  ${({ toggleDone }) =>\r\n    toggleDone &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.color.green};\r\n\r\n      &:hover {\r\n        background-color: ${({ theme }) => theme.color.mediumGreen};\r\n        transition: 0.2s;\r\n        cursor: pointer;\r\n      }\r\n    `}\r\n\r\n  ${({ remove }) =>\r\n    remove &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.color.red};\r\n\r\n      &:hover {\r\n        background-color: ${({ theme }) => theme.color.mediumRed};\r\n        transition: 0.2s;\r\n        cursor: pointer;\r\n      }\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map((task) => (\r\n      <Item key={task.id} hidden={task.done && hideDone}>\r\n        <Button toggleDone onClick={() => toggleTaskDone(task.id)}>\r\n          {task.done ? \"✔\" : \"\"}\r\n        </Button>\r\n        <Content done={task.done}>\r\n          {task.id}. {task.content}\r\n        </Content>\r\n        <Button remove onClick={() => removeTask(task.id)}>\r\n          🗑\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainHeader = styled.header`\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n  justify-content: flex-start;\r\n`;\r\n","import React from \"react\";\r\nimport { HeaderTitle, MainHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <MainHeader>\r\n    <HeaderTitle>{title}</HeaderTitle>\r\n  </MainHeader>\r\n);\r\n\r\nexport default Header;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  color: ${({ theme }) => theme.color.teal};\r\n  cursor: pointer;\r\n\r\n  ${({ disabled }) =>\r\n    disabled &&\r\n    css`\r\n      color: ${({ theme }) => theme.color.gray};\r\n      transition: 0.2s;\r\n      cursor: auto;\r\n    `}\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.color.lightTeal};\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <ButtonsContainer>\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <Button onClick={toggleHideDone}>\r\n          {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n        </Button>\r\n        <Button disabled={tasks.every(({ done }) => done)} onClick={setAllDone}>\r\n          Ukończ wszystkie\r\n        </Button>\r\n      </>\r\n    )}\r\n  </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const SectionBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid ${({ theme }) => theme.color.mediumGray};\r\n  padding: 20px;\r\n  margin: 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    row-gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const SectionHeader = styled.h2``;\r\n","import React from \"react\";\r\nimport { SectionContainer, SectionBox, SectionHeader } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <SectionContainer>\r\n    <SectionBox>\r\n      <SectionHeader>{title}</SectionHeader>\r\n      {extraHeaderContent}\r\n    </SectionBox>\r\n    {body}\r\n  </SectionContainer>\r\n);\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  margin: 50px auto;\r\n  max-width: 1000px;\r\n  word-break: break-word;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { MainContainer } from \"./styled\";\r\n\r\nconst Main = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport { useTasks } from \"./useTasks\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Header from \"./Header\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n    hideDone,\n    toggleHideDone,\n  } = useTasks();\n\n  return (\n    <Main>\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <Tasks\n            toggleTaskDone={toggleTaskDone}\n            removeTask={removeTask}\n            tasks={tasks}\n            hideDone={hideDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *,\r\n    ::after,\r\n    ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        background-image: url(https://wallpapers.com/images/high/best-marble-background-6v2qysqi0lvrsu40.webp);\r\n        opacity: 0.9;\r\n        background-size: cover;\r\n        font-family: \"Lato\", sans-serif;\r\n        margin: 20px;\r\n    }`;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { GlobalStyle } from \"./globalStyle\";\nimport { theme } from \"./theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n  color: {\r\n    white: \"white\",\r\n    teal: \"teal\",\r\n    gray: \"#ccc\",\r\n    mediumGray: \"#ddd\",\r\n    lightTeal: \"hsl(180, 100%, 35%)\",\r\n    mediumTeal: \"hsl(180, 100%, 30%)\",\r\n    green: \"green\",\r\n    mediumGreen: \"hsl(120, 100%, 30%)\",\r\n    red: \"red\",\r\n    mediumRed: \"hsl(0, 100%, 65%)\",\r\n  },\r\n\r\n  breakpoint: {\r\n    mobileMax: 767,\r\n  },\r\n};\r\n"],"sourceRoot":""}