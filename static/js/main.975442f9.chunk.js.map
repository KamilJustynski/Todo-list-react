{"version":3,"sources":["useTasks.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Header/styled.js","Header/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Main/styled.js","Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["useTasks","_useState","useState","tasks","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","setTasks","useEffect","setItem","stringify","removeTask","id","filter","task","toggleTaskDone","map","_objectSpread","done","setAllDone","addNewTask","content","concat","_toConsumableArray","length","FormContainer","styled","form","_templateObject","_taggedTemplateLiteral","FormInput","input","_templateObject2","FormButton","button","_templateObject3","Form","_ref","newTaskContent","setNewTaskContent","inputRef","useRef","React","createElement","onSubmit","event","preventDefault","contentTrimmed","trim","ref","value","required","placeholder","onChange","_ref2","target","onClick","current","focus","List","ul","Item","li","hidden","css","Content","span","_templateObject4","_templateObject5","Button","_templateObject6","_ref3","toggleDone","_templateObject7","_ref4","remove","_templateObject8","Tasks","hideDone","key","MainHeader","header","HeaderTitle","h1","Header","title","ButtonsContainer","div","Btn","disabled","Buttons","toggleHideDone","Fragment","every","SectionContainer","section","SectionBox","SectionHeader","h2","Section","body","extraHeaderContent","MainContainer","main","Main","children","App","setHideDone","_useTasks","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"mQAEaA,EAAW,WACtB,IAGEC,EAEwBC,mBALO,WAC/B,IAAMC,EAAQC,aAAaC,QAAQ,SACnC,OAAOF,EAAQG,KAAKC,MAAMJ,GAAS,KAGuBK,EAAAC,YAAAR,EAAA,GAArDE,EAAKK,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,oBAAU,WACRP,aAAaQ,QAAQ,QAASN,KAAKO,UAAUV,KAC5C,CAACA,IAiCJ,MAAO,CAAEA,QAAOW,WA/BG,SAACC,GAClBL,EAAS,SAACP,GAAK,OAAKA,EAAMa,OAAO,SAACC,GAAI,OAAKA,EAAKF,KAAOA,OA8B7BG,eA3BL,SAACH,GACtBL,EAAS,SAACP,GAAK,OACbA,EAAMgB,IAAI,SAACF,GACT,OAAIA,EAAKF,KAAOA,EACdK,YAAA,GAAYH,EAAI,CAAEI,MAAOJ,EAAKI,OAGzBJ,OAoB+BK,WAfzB,WACjBZ,EAAS,SAACP,GAAK,OAAKA,EAAMgB,IAAI,SAACF,GAAI,OAAAG,YAAA,GAAWH,EAAI,CAAEI,MAAM,SAcJE,WAXrC,SAACC,GAClBd,EAAS,SAACP,GAAK,SAAAsB,OAAAC,YACVvB,GAAK,CACR,CACEqB,UACAH,MAAM,EACNN,GAAqB,IAAjBZ,EAAMwB,OAAe,EAAIxB,EAAMA,EAAMwB,OAAS,GAAGZ,GAAK,wBCtCrDa,EAAgBC,IAAOC,KAAIC,MAAAC,YAAA,4LAY3BC,EAAYJ,IAAOK,MAAKC,MAAAH,YAAA,uDAKxBI,EAAaP,IAAOQ,OAAMC,MAAAN,YAAA,2OCiBxBO,EAjCF,SAAHC,GAAuB,IAAjBjB,EAAUiB,EAAVjB,WAAUtB,EACoBC,mBAAS,IAAGM,EAAAC,YAAAR,EAAA,GAAjDwC,EAAcjC,EAAA,GAAEkC,EAAiBlC,EAAA,GAYlCmC,EAAWC,iBAAO,MAMxB,OACEC,IAAAC,cAAClB,EAAa,CAACmB,SAjBI,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAiBT,EAAeU,OACR,KAA1BD,EAAeC,SAGnB5B,EAAW2B,GACXR,EAAkB,OAWhBG,IAAAC,cAACb,EAAS,CACRmB,IAAKT,EACLU,MAAOZ,EACPa,UAAQ,EACRC,YAAY,wBACZC,SAAU,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAM,OAAOhB,EAAkBgB,EAAOL,UAErDR,IAAAC,cAACV,EAAU,CAACuB,QAbG,WACjBhB,EAASiB,QAAQC,UAYkB,mBC7B1BC,EAAOjC,IAAOkC,GAAEhC,MAAAC,YAAA,sEAMhBgC,EAAOnC,IAAOoC,GAAE9B,MAAAH,YAAA,4KAQzB,SAAAQ,GAAS,OAAAA,EAAN0B,QAEHC,YAAG7B,MAAAN,YAAA,sCAKMoC,EAAUvC,IAAOwC,KAAIC,MAAAtC,YAAA,gBAC9B,SAAAyB,GAAO,OAAAA,EAAJpC,MAEH8C,YAAGI,MAAAvC,YAAA,sDAKMwC,EAAS3C,IAAOQ,OAAMoC,MAAAzC,YAAA,8FAM/B,SAAA0C,GAAa,OAAAA,EAAVC,YAEHR,YAAGS,MAAA5C,YAAA,gLAUH,SAAA6C,GAAS,OAAAA,EAANC,QAEHX,YAAGY,MAAA/C,YAAA,6KC9BQgD,EAlBD,SAAHxC,GAAA,IAAMrC,EAAKqC,EAALrC,MAAO8E,EAAQzC,EAARyC,SAAUnE,EAAU0B,EAAV1B,WAAYI,EAAcsB,EAAdtB,eAAc,OAC1D2B,IAAAC,cAACgB,EAAI,KACF3D,EAAMgB,IAAI,SAACF,GAAI,OACd4B,IAAAC,cAACkB,EAAI,CAACkB,IAAKjE,EAAKF,GAAImD,OAAQjD,EAAKI,MAAQ4D,GACvCpC,IAAAC,cAAC0B,EAAM,CAACG,YAAU,EAAChB,QAAS,kBAAMzC,EAAeD,EAAKF,MACnDE,EAAKI,KAAO,SAAM,IAErBwB,IAAAC,cAACsB,EAAO,CAAC/C,KAAMJ,EAAKI,MACjBJ,EAAKF,GAAG,KAAGE,EAAKO,SAEnBqB,IAAAC,cAAC0B,EAAM,CAACM,QAAM,EAACnB,QAAS,kBAAM7C,EAAWG,EAAKF,MAAK,qBCX9CoE,EAAatD,IAAOuD,OAAMrD,MAAAC,YAAA,gGAO1BqD,EAAcxD,IAAOyD,GAAEnD,MAAAH,YAAA,0CCArBuD,EANA,SAAH/C,GAAA,IAAMgD,EAAKhD,EAALgD,MAAK,OACrB3C,IAAAC,cAACqC,EAAU,KACTtC,IAAAC,cAACuC,EAAW,KAAEG,KCHLC,EAAmB5D,IAAO6D,IAAG3D,MAAAC,YAAA,gOAa7B2D,EAAM9D,IAAOQ,OAAMF,MAAAH,YAAA,+KAM5B,SAAAQ,GAAW,OAAAA,EAARoD,UAEHzB,YAAG7B,MAAAN,YAAA,kFCLQ6D,EAfC,SAAHrD,GAAA,IAAMrC,EAAKqC,EAALrC,MAAO8E,EAAQzC,EAARyC,SAAUa,EAActD,EAAdsD,eAAgBxE,EAAUkB,EAAVlB,WAAU,OAC5DuB,IAAAC,cAAC2C,EAAgB,KACdtF,EAAMwB,OAAS,GACdkB,IAAAC,cAAAD,IAAAkD,SAAA,KACElD,IAAAC,cAAC6C,EAAG,CAAChC,QAASmC,GACXb,EAAW,aAAU,QAAQ,mBAEhCpC,IAAAC,cAAC6C,EAAG,CAACC,SAAUzF,EAAM6F,MAAM,SAAAvC,GAAO,OAAAA,EAAJpC,OAAkBsC,QAASrC,GAAY,4BCRhE2E,EAAmBpE,IAAOqE,QAAOnE,MAAAC,YAAA,yDAKjCmE,EAAatE,IAAO6D,IAAGvD,MAAAH,YAAA,wQAevBoE,EAAgBvE,IAAOwE,GAAE/D,MAAAN,YAAA,QCTvBsE,EAVC,SAAH9D,GAAA,IAAMgD,EAAKhD,EAALgD,MAAOe,EAAI/D,EAAJ+D,KAAMC,EAAkBhE,EAAlBgE,mBAAkB,OAChD3D,IAAAC,cAACmD,EAAgB,KACfpD,IAAAC,cAACqD,EAAU,KACTtD,IAAAC,cAACsD,EAAa,KAAEZ,GACfgB,GAEFD,ICPQE,EAAgB5E,IAAO6E,KAAI3E,MAAAC,YAAA,0ICGzB2E,EAFF,SAAHnE,GAAA,IAAMoE,EAAQpE,EAARoE,SAAQ,OAAO/D,IAAAC,cAAC2D,EAAa,KAAEG,ICmDhCC,OA7Cf,WAAe,IAAA5G,EACmBC,oBAAS,GAAMM,EAAAC,YAAAR,EAAA,GAAxCgF,EAAQzE,EAAA,GAAEsG,EAAWtG,EAAA,GAAAuG,EAQxB/G,IALFG,EAAK4G,EAAL5G,MACAW,EAAUiG,EAAVjG,WACAI,EAAc6F,EAAd7F,eACAI,EAAUyF,EAAVzF,WACAC,EAAUwF,EAAVxF,WAOF,OACEsB,IAAAC,cAAC6D,EAAI,KACH9D,IAAAC,cAACyC,EAAM,CAACC,MAAM,qBACd3C,IAAAC,cAACwD,EAAO,CACNd,MAAM,qBACNe,KAAM1D,IAAAC,cAACP,EAAI,CAAChB,WAAYA,MAE1BsB,IAAAC,cAACwD,EAAO,CACNd,MAAM,mBACNe,KACE1D,IAAAC,cAACkC,EAAK,CACJ9D,eAAgBA,EAChBJ,WAAYA,EACZX,MAAOA,EACP8E,SAAUA,IAGduB,mBACE3D,IAAAC,cAAC+C,EAAO,CACN1F,MAAOA,EACP8E,SAAUA,EACVa,eAzBa,WACrBgB,EAAY,SAAC7B,GAAQ,OAAMA,KAyBnB3D,WAAYA,QClCT0F,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAA7E,GAAiD,IAA9C+E,EAAM/E,EAAN+E,OAAQC,EAAMhF,EAANgF,OAAQC,EAAMjF,EAANiF,OAAQC,EAAMlF,EAANkF,OAAQC,EAAOnF,EAAPmF,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnF,IAAAC,cAACD,IAAMoF,WAAU,KACfpF,IAAAC,cAAC+D,GAAG,QAORG","file":"static/js/main.975442f9.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n  const getTasksFromLocalStorage = () => {\r\n    const tasks = localStorage.getItem(\"tasks\");\r\n    return tasks ? JSON.parse(tasks) : [];\r\n  };\r\n\r\n  const [tasks, setTasks] = useState(getTasksFromLocalStorage);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const removeTask = (id) => {\r\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return { ...task, done: !task.done };\r\n        }\r\n\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks((tasks) => tasks.map((task) => ({ ...task, done: true })));\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks((tasks) => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n  padding: 20px;\r\n\r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  border: none;\r\n  background-color: teal;\r\n  color: white;\r\n  padding: 10px 20px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: hsl(180, 100%, 30%);\r\n    transform: scale(1.1);\r\n    transition: all 0.2s;\r\n  }\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { FormContainer, FormInput, FormButton } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contentTrimmed = newTaskContent.trim();\r\n    if (contentTrimmed.trim() === \"\") {\r\n      return;\r\n    }\r\n    addNewTask(contentTrimmed);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <FormContainer onSubmit={onFormSubmit}>\r\n      <FormInput\r\n        ref={inputRef}\r\n        value={newTaskContent}\r\n        required\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <FormButton onClick={focusInput}>Dodaj zadanie</FormButton>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  padding: 30px 10px;\r\n  margin: 0px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  grid-gap: 10px;\r\n  padding: 15px;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n\r\n  ${({ hidden }) =>\r\n    hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 35px;\r\n  height: 35px;\r\n  color: white;\r\n  border: none;\r\n\r\n  ${({ toggleDone }) =>\r\n    toggleDone &&\r\n    css`\r\n      background-color: green;\r\n\r\n      &:hover {\r\n        background-color: hsl(120, 100%, 30%);\r\n        transition: 0.2s;\r\n        cursor: pointer;\r\n      }\r\n    `}\r\n\r\n  ${({ remove }) =>\r\n    remove &&\r\n    css`\r\n      background-color: red;\r\n\r\n      &:hover {\r\n        background-color: hsl(0, 100%, 65%);\r\n        transition: 0.2s;\r\n        cursor: pointer;\r\n      }\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map((task) => (\r\n      <Item key={task.id} hidden={task.done && hideDone}>\r\n        <Button toggleDone onClick={() => toggleTaskDone(task.id)}>\r\n          {task.done ? \"✔\" : \"\"}\r\n        </Button>\r\n        <Content done={task.done}>\r\n          {task.id}. {task.content}\r\n        </Content>\r\n        <Button remove onClick={() => removeTask(task.id)}>\r\n          🗑\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainHeader = styled.header`\r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n  justify-content: flex-start;\r\n`;\r\n","import React from \"react\";\r\nimport { HeaderTitle, MainHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <MainHeader>\r\n    <HeaderTitle>{title}</HeaderTitle>\r\n  </MainHeader>\r\n);\r\n\r\nexport default Header;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n\r\n  @media (max-width: 600px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  border: none;\r\n  background-color: white;\r\n  color: teal;\r\n  cursor: pointer;\r\n\r\n  ${({ disabled }) =>\r\n    disabled &&\r\n    css`\r\n      color: #ccc;\r\n      transition: 0.2s;\r\n      cursor: auto;\r\n    `}\r\n\r\n  &:hover {\r\n    color: hsl(180, 100%, 35%);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ButtonsContainer, Btn } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <ButtonsContainer>\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <Btn onClick={toggleHideDone}>\r\n          {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n        </Btn>\r\n        <Btn disabled={tasks.every(({ done }) => done)} onClick={setAllDone}>\r\n          Ukończ wszystkie\r\n        </Btn>\r\n      </>\r\n    )}\r\n  </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n  background-color: white;\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const SectionBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 20px;\r\n  margin: 0;\r\n\r\n  @media (max-width: 600px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    row-gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const SectionHeader = styled.h2``;\r\n","import React from \"react\";\r\nimport { SectionContainer, SectionBox, SectionHeader } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <SectionContainer>\r\n    <SectionBox>\r\n      <SectionHeader>{title}</SectionHeader>\r\n      {extraHeaderContent}\r\n    </SectionBox>\r\n    {body}\r\n  </SectionContainer>\r\n);\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  margin: 50px auto;\r\n  max-width: 1000px;\r\n  word-break: break-word;\r\n\r\n  @media (max-width: 600px) {\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { MainContainer } from \"./styled\";\r\n\r\nconst Main = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\nimport { useTasks } from \"./useTasks\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Header from \"./Header\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  const toggleHideDone = () => {\n    setHideDone((hideDone) => !hideDone);\n  };\n\n  return (\n    <Main>\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <Tasks\n            toggleTaskDone={toggleTaskDone}\n            removeTask={removeTask}\n            tasks={tasks}\n            hideDone={hideDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}